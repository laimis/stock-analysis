<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
        <SpaProxyServerUrl>https://localhost:44406</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <LangVersion>Latest</LangVersion>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.Authentication.Google" Version="7.0.13"/>
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.13"/>
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**"/>
        <None Remove="$(SpaRoot)**"/>
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**"/>
        <Content Remove="ClientApp\.angular\**"/>
        <None Remove="ClientApp\.angular\**"/>
        <Content Remove="ClientApp\dist\**"/>
        <None Remove="ClientApp\dist\**"/>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\core\core.csproj"/>
        <ProjectReference Include="..\infrastructure\storage.postgres\storage.postgres.csproj"/>
        <ProjectReference Include="..\infrastructure\csvparser\csvparser.csproj"/>
        <ProjectReference Include="..\infrastructure\sendgridclient\sendgridclient.csproj"/>
        <ProjectReference Include="..\infrastructure\stripe\stripe.csproj"/>
        <ProjectReference Include="..\infrastructure\coinmarketcap\coinmarketcap.csproj"/>
        <ProjectReference Include="..\infrastructure\storage.memory\storage.memory.csproj"/>
        <ProjectReference Include="..\infrastructure\twilioclient\twilioclient.csproj"/>
        <ProjectReference Include="..\infrastructure\tdameritradeclient\tdameritradeclient.csproj"/>
        <ProjectReference Include="..\infrastructure\timezonesupport\timezonesupport.csproj"/>
        <ProjectReference Include="..\infrastructure\secedgar\secedgar.csproj"/>
        <ProjectReference Include="..\infrastructure\securityutils\securityutils.csproj"/>
        <ProjectReference Include="..\core.fs\core.fs.fsproj"/>
    </ItemGroup>

    <ItemGroup>
        <Compile Remove="ClientApp\.angular\**"/>
        <Compile Remove="ClientApp\dist\**"/>
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Remove="ClientApp\.angular\**"/>
        <EmbeddedResource Remove="ClientApp\dist\**"/>
    </ItemGroup>

    <ItemGroup>
      <Folder Include="wwwroot\" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE."/>
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..."/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production"/>

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**"/>
            <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'"/>
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
